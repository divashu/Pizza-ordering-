workflows:
  android-debug-patched:
    name: Android Debug (settings.gradle & app/build.gradle patched)
    max_build_duration: 40
    environment:
      flutter: 3.35.6
      java: 17
    cache:
      cache_paths:
        - $FLUTTER_ROOT/.pub-cache
        - ~/.gradle/caches
    scripts:
      - echo "Versions:" && flutter --version && java -version
      - flutter create . --platforms=android --org com.example --overwrite
      - flutter pub get
      - yes | sdkmanager --licenses || true

      # Patch settings.gradle to plugin DSL (already working)
      - |
        set -e
        cat > android/settings.gradle <<'EOF'
        pluginManagement {
          def flutterSdkPath = System.getenv("FLUTTER_ROOT")
          if (flutterSdkPath == null && file("local.properties").exists()) {
            def props = new Properties()
            file("local.properties").withInputStream { props.load(it) }
            flutterSdkPath = props.getProperty("flutter.sdk")
          }
          if (flutterSdkPath == null) {
            throw new GradleException("Flutter SDK not found. Set FLUTTER_ROOT or flutter.sdk in local.properties")
          }
          includeBuild("$flutterSdkPath/packages/flutter_tools/gradle")
          repositories { google(); mavenCentral(); gradlePluginPortal() }
        }
        plugins {
          id "dev.flutter.flutter-plugin-loader"
        }
        include(":app")
        EOF

      # >>> Patch app/build.gradle to the new DSL (removes old 'apply from: flutter.gradle')
      - |
        cat > android/app/build.gradle <<'EOF'
        plugins {
            id "com.android.application"
            id "kotlin-android"
            id "dev.flutter.flutter-gradle-plugin"
        }

        android {
            namespace "com.example.pizza_ordering"
            compileSdk 34

            defaultConfig {
                applicationId "com.example.pizza_ordering"
                minSdk 21
                targetSdk 34
                versionCode 1
                versionName "1.0"
                multiDexEnabled true
            }

            buildTypes {
                release {
                    minifyEnabled false
                    signingConfig signingConfigs.debug
                }
            }

            compileOptions {
                sourceCompatibility JavaVersion.VERSION_17
                targetCompatibility JavaVersion.VERSION_17
            }
            kotlinOptions {
                jvmTarget = "17"
            }
        }

        flutter {
            source '../..'
        }
        EOF

      # Build the APK
      - flutter build apk --debug -v --no-shrink

    artifacts:
      - build/app/outputs/flutter-apk/app-debug.apk
